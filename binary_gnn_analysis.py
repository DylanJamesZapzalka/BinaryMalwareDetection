from models import BinaryGNN
import tensorflow as tf
from datasets import BinaryDataSet
from spektral.data import BatchLoader
import numpy as np



# Hyperparameters
LEARNING_RATE = 0.0001
EPOCHS = 30



# Create and compile the model
model = BinaryGNN()
model.compile(
    loss=tf.keras.losses.CategoricalCrossentropy(),
    optimizer=tf.keras.optimizers.Adam(learning_rate=LEARNING_RATE),
    metrics=["accuracy"]
)

# Load the data
dataset = BinaryDataSet()
np.random.shuffle(dataset)
training_set = dataset[0 : int(len(dataset)*.8)]
testing_set = dataset[int(len(dataset)*.8) : len(dataset)]

# Train the model
loader = BatchLoader(training_set)
model.fit(loader.load(), steps_per_epoch=loader.steps_per_epoch, epochs=EPOCHS, verbose=1)

# Test the model
loader = BatchLoader(testing_set)
loss = model.evaluate(loader.load(), steps=loader.steps_per_epoch)
print('Test loss: {}'.format(loss))